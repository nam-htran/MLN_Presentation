
===== ./next.config.js =====
/** @type {import('next').NextConfig} */
const nextConfig = {
  reactStrictMode: true,
  swcMinify: true,
};

module.exports = nextConfig;

===== ./tailwind.config.ts =====
/** @type {import('tailwindcss').Config} */
module.exports = {
  content: [
    "./app/**/*.{js,ts,jsx,tsx}",
    "./components/**/*.{js,ts,jsx,tsx}",
  ],
  darkMode: "class",
  theme: {
    extend: {
      colors: {
        background: "hsl(var(--background))",
        foreground: "hsl(var(--foreground))",
        muted: "hsl(var(--muted))",
        "muted-foreground": "hsl(var(--muted-foreground))",
        primary: "hsl(var(--primary))",
        "primary-foreground": "hsl(var(--primary-foreground))",
        border: "hsl(var(--border))",
        input: "hsl(var(--input))",
        ring: "hsl(var(--ring))",
      },
      borderRadius: {
        lg: "var(--radius)",
        md: "calc(var(--radius) - 2px)",
        sm: "calc(var(--radius) - 4px)",
      },
    },
  },
  plugins: [],
};


===== ./components.json =====
{
  "$schema": "https://ui.shadcn.com/schema.json",
  "style": "new-york",
  "rsc": true,
  "tsx": true,
  "tailwind": {
    "config": "tailwind.config.ts",
    "css": "app/globals.css",
    "baseColor": "neutral",
    "cssVariables": true,
    "prefix": ""
  },
  "iconLibrary": "lucide",
  "aliases": {
    "components": "@/components",
    "utils": "@/lib/utils",
    "ui": "@/components/ui",
    "lib": "@/lib",
    "hooks": "@/hooks"
  },
  "registries": {}
}


===== ./tsconfig.json =====
{
  "compilerOptions": {
    "target": "ES2017",
    "lib": ["dom", "dom.iterable", "esnext"],
    "allowJs": true,
    "skipLibCheck": true,
    "strict": true,
    "noEmit": true,
    "esModuleInterop": true,
    "module": "esnext",
    "moduleResolution": "bundler",
    "resolveJsonModule": true,
    "isolatedModules": true,
    "jsx": "preserve",
    "incremental": true,
    "plugins": [
      {
        "name": "next"
      }
    ],
    "paths": {
      "@/*": ["./*"]
    }
  },
  "include": ["next-env.d.ts", "**/*.ts", "**/*.tsx", ".next/types/**/*.ts", "components/detailed-"],
  "exclude": ["node_modules"]
}


===== ./next-env.d.ts =====
/// <reference types="next" />
/// <reference types="next/image-types/global" />

// NOTE: This file should not be edited
// see https://nextjs.org/docs/app/building-your-application/configuring/typescript for more information.


===== ./components/chatbot-section.tsx =====
// components/chatbot-section.tsx
"use client";
import { Button } from "./ui/button";
import { Card } from "./ui/card";
import { SendHorizonal } from "lucide-react";
import Image from "next/image";

export function ChatbotSection() {
  return (
    <div className="scroll-section dark text-white w-full bg-slate-900 overflow-hidden">
      <Image
        src="/chatbot-background.jpg"
        alt="Abstract technology background"
        fill
        className="object-cover z-0 animate-subtle-zoom"
      />
      <div className="absolute inset-0 bg-slate-900/70 z-10"></div> 
      <div className="absolute inset-0 bg-grid-white/[0.05] z-10"></div>
      <div className="container relative z-20 mx-auto flex flex-col items-center justify-center h-full px-6">
        <div className="text-center mb-12">
            <h2 className="text-4xl md:text-5xl font-bold text-white mb-4">
                Trò chuyện cùng AI
            </h2>
            <p className="text-xl text-white/70 max-w-2xl mx-auto text-pretty">
                Đặt câu hỏi của bạn về mối quan hệ giữa AI và con người, hoặc bất cứ điều gì bạn tò mò.
            </p>
        </div>
        <Card className="w-full max-w-3xl h-[40vh] max-h-[400px] bg-slate-800/60 border-white/20 backdrop-blur-lg flex flex-col">
            <div className="flex-1 p-6 overflow-y-auto space-y-4">
                <div className="flex items-start gap-3">
                    <div className="w-8 h-8 rounded-full bg-primary flex items-center justify-center flex-shrink-0 font-bold text-sm">AI</div>
                    <div className="bg-slate-700 rounded-lg rounded-tl-none p-3 max-w-md">
                        <p className="text-white/90">Xin chào! Tôi là AI Assistant. Bạn muốn hỏi điều gì về tương lai của công nghệ và con người?<span className="inline-block w-1 blinking-caret text-primary"></span></p>
                    </div>
                </div>
            </div>
            <div className="p-4 border-t border-white/20 bg-slate-800/80">
                <div className="relative">
                    <input 
                        type="text"
                        placeholder="Nhập câu hỏi của bạn ở đây..."
                        className="w-full bg-slate-700 border-slate-600 rounded-full py-3 pl-5 pr-16 text-white placeholder:text-slate-400 focus:ring-2 focus:ring-primary focus:outline-none"
                    />
                    <Button size="icon" className="absolute right-2 top-1/2 -translate-y-1/2 rounded-full">
                        <SendHorizonal className="w-5 h-5"/>
                    </Button>
                </div>
            </div>
        </Card>
      </div>
    </div>
  );
}

===== ./components/laws-horizontal-scroll-section.tsx =====
// components/laws-horizontal-scroll-section.tsx
"use client"
import { useEffect, useRef, useState } from "react"
import { Waves, TrendingUp, RefreshCw } from "lucide-react"
import { Badge } from "./ui/badge";

const laws = [
  {
    name: "Quy luật Mâu thuẫn",
    summary: "Nguồn Gốc Của Sự Vận Động",
    description: "Mọi sự vật đều chứa đựng các mặt đối lập (thống nhất và đấu tranh). Chính sự đấu tranh giữa chúng là nguồn gốc nội tại, tạo ra động lực cho mọi sự phát triển.",
    points: [
      "Mâu thuẫn tồn tại khách quan, phổ biến.",
      "Mâu thuẫn bên trong giữ vai trò quyết định.",
      "Đấu tranh của các mặt đối lập là tuyệt đối."
    ],
    icon: Waves,
    color: "#3b82f6",
  },
  {
    name: "Quy luật Lượng - Chất",
    summary: "Cách Thức Của Sự Phát Triển",
    description: "Sự phát triển bắt đầu bằng việc tích lũy dần về lượng. Khi đạt đến giới hạn 'điểm nút', một 'bước nhảy' về chất sẽ xảy ra, tạo ra sự vật mới.",
    points: [
      "Lượng là yếu tố động, thường xuyên thay đổi.",
      "Chất là yếu tố ổn định, chỉ thay đổi khi có bước nhảy.",
      "Cần tránh cả hai thái cực: nóng vội và bảo thủ."
    ],
    icon: TrendingUp,
    color: "#22c55e",
  },
  {
    name: "Quy luật Phủ định của Phủ định",
    summary: "Khuynh Hướng Của Sự Phát Triển",
    description: "Sự phát triển diễn ra theo con đường xoáy ốc. Cái mới ra đời từ cái cũ, kế thừa những yếu tố tích cực và tiến lên một trình độ cao hơn.",
    points: [
      "Phủ định biện chứng mang tính khách quan và kế thừa.",
      "Phát triển không phải là đường thẳng mà là xoáy ốc.",
      "Cần có thái độ cởi mở, ủng hộ cái mới hợp quy luật."
    ],
    icon: RefreshCw,
    color: "#f59e0b",
  },
]

export function LawsHorizontalScrollSection() {
  const containerRef = useRef<HTMLDivElement>(null);
  const [activeIndex, setActiveIndex] = useState(0);

  useEffect(() => {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          const target = entry.target as HTMLElement;
          if (entry.isIntersecting) {
            target.classList.add("is-visible");
            const index = parseInt(target.getAttribute('data-index') || '0', 10);
            setActiveIndex(index);
          } else {
            target.classList.remove("is-visible");
          }
        });
      },
      { root: containerRef.current, threshold: 0.7 }
    );
    const cards = Array.from(containerRef.current?.children || []);
    cards.forEach((card) => observer.observe(card));
    return () => { cards.forEach((card) => observer.unobserve(card)); };
  }, []);

  return (
    <section className="scroll-section relative">
      
      {/* Layer 1: Ảnh nền cố định */}
      <div className="absolute inset-0 z-0">
        <img
          src="/laws-background.jpg"
          alt="Digital network background"
          className="w-full h-full object-cover"
        />
      </div>

      {/* ===== PHẦN CẬP NHẬT ===== */}
      {/* Layer 2: Lớp phủ đã được giảm độ mờ và bỏ blur */}
      <div className="absolute inset-0 z-10 bg-slate-900/60"></div>
      {/* ========================== */}
      
      {/* Layer 3: Nội dung chính */}
      <div ref={containerRef} className="horizontal-scroll-container h-full w-full relative z-20">
        {laws.map((law, index) => {
          const Icon = law.icon
          return (
            <div key={index} className="horizontal-card" data-index={index}>
              <Icon className="absolute w-1/2 h-1/2 text-white/5 opacity-50 blur-3xl" style={{ color: law.color }}/>
              <div className="card-content-wrapper max-w-4xl text-center text-white z-10">
                <div className="inline-flex items-center gap-4 mb-8">
                  <div className="p-4 rounded-xl bg-slate-800/50">
                    <Icon style={{ color: law.color }} className="w-8 h-8" />
                  </div>
                  <h2 className="text-3xl font-bold" style={{ color: law.color }}>
                    {law.name}
                  </h2>
                </div>
                <h3 className="text-5xl md:text-7xl font-black mb-6 text-balance bg-gradient-to-r from-white to-slate-400 bg-clip-text text-transparent">
                  {law.summary}
                </h3>
                <p className="text-xl md:text-2xl text-slate-300 leading-relaxed text-pretty mb-8">
                  {law.description}
                </p>
                <div className="flex flex-wrap justify-center gap-3">
                    {laws[activeIndex].points.map((point, i) => (
                        <Badge key={i} variant="outline" className="text-slate-300 border-slate-600 backdrop-blur-sm bg-white/5 text-base py-1 px-4">{point}</Badge>
                    ))}
                </div>
              </div>
            </div>
          )
        })}
      </div>
      
      {/* Dấu chấm chỉ báo tiến trình */}
      <div className="absolute bottom-10 left-1/2 -translate-x-1/2 flex gap-3 z-20">
        {laws.map((_, index) => (
          <div key={index} className={`w-3 h-3 rounded-full transition-all duration-500 ${ activeIndex === index ? 'scale-125 bg-white' : 'bg-white/30' }`} />
        ))}
      </div>
    </section>
  )
}

===== ./components/examples-section.tsx =====
// components/examples-section.tsx
"use client";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { BookOpen, HeartPulse, Palette, TrendingUp } from "lucide-react";

const examples = [
    {
        title: "AI trong Giáo dục",
        description: "ChatGPT hỗ trợ học sinh, tạo đề thi, nhưng cũng gây lo ngại về sự phụ thuộc và giảm tư duy tự nhiên.",
        icon: BookOpen
    },
    {
        title: "AI trong Y tế",
        description: "Hỗ trợ chẩn đoán hình ảnh, phân tích dữ liệu lớn, nhưng có rủi ro sai lệch do dữ liệu huấn luyện thiên lệch (bias).",
        icon: HeartPulse
    },
    {
        title: "AI Sáng tạo",
        description: "Viết nhạc, vẽ tranh, tạo kịch bản, ảnh hưởng trực tiếp đến công việc của nghệ sĩ, nhà báo và nhà thiết kế.",
        icon: Palette
    },
]

const comparisonData = [
    {
        criteria: "Tốc độ & Độ chính xác",
        ai: "Rất nhanh, ít sai trong tác vụ lặp đi lặp lại.",
        human: "Linh hoạt, có thể xử lý các tình huống bất ngờ."
    },
    {
        criteria: "Sáng tạo & Trí tưởng tượng",
        ai: "Mô phỏng dựa trên dữ liệu, thiếu ý tưởng đột phá.",
        human: "Sáng tạo bản chất, đổi mới thực sự."
    },
    {
        criteria: "Đạo đức & Trách nhiệm",
        ai: "Phụ thuộc vào lập trình và kiểm soát của con người.",
        human: "Có khả năng ra quyết định dựa trên giá trị nhân văn."
    },
    {
        criteria: "Thích nghi",
        ai: "Tốt nếu có dữ liệu và mô hình phù hợp.",
        human: "Thích ứng linh hoạt với môi trường hoàn toàn mới."
    }
]

export function ExamplesSection() {
  return (
    <section className="scroll-section w-full bg-background dark:bg-slate-950">
      <div className="container mx-auto px-6 py-12">
        <div className="text-center mb-16">
          <h2 className="text-4xl md:text-5xl font-bold mb-4">Thực trạng & Ví dụ</h2>
          <p className="text-xl text-muted-foreground max-w-3xl mx-auto text-pretty">
            AI đang hiện diện trong mọi lĩnh vực, tạo ra cả cơ hội và thách thức.
          </p>
        </div>
        
        {/* Ví dụ thực tế */}
        <div className="grid md:grid-cols-3 gap-8 mb-20">
          {examples.map((example, index) => {
            const Icon = example.icon;
            return (
              <Card key={index} className="text-center p-4 border-2 hover:border-primary transition-all duration-300 hover:shadow-xl">
                <CardHeader className="items-center">
                  <div className="p-4 bg-primary/10 rounded-full mb-4">
                    <Icon className="w-8 h-8 text-primary" />
                  </div>
                  <CardTitle className="text-2xl">{example.title}</CardTitle>
                </CardHeader>
                <CardContent>
                  <p className="text-muted-foreground leading-relaxed">{example.description}</p>
                </CardContent>
              </Card>
            )
          })}
        </div>

        {/* Bảng so sánh */}
        <div className="bg-card p-8 rounded-2xl border">
            <h3 className="text-3xl font-bold text-center mb-8">So sánh AI và Con người</h3>
            <div className="overflow-x-auto">
                <table className="w-full text-left table-auto">
                    <thead>
                        <tr className="border-b">
                            <th className="p-4 text-lg font-semibold">Tiêu chí</th>
                            <th className="p-4 text-lg font-semibold text-green-500">Ưu điểm của AI</th>
                            <th className="p-4 text-lg font-semibold text-indigo-400">Ưu điểm của Con người</th>
                        </tr>
                    </thead>
                    <tbody>
                        {comparisonData.map((row, i) => (
                            <tr key={i} className="border-b last:border-0">
                                <td className="p-4 font-medium">{row.criteria}</td>
                                <td className="p-4 text-muted-foreground">{row.ai}</td>
                                <td className="p-4 text-muted-foreground">{row.human}</td>
                            </tr>
                        ))}
                    </tbody>
                </table>
            </div>
            <p className="text-center mt-6 text-sm text-muted-foreground italic">
              Thông tin tham khảo từ World Economic Forum.
            </p>
        </div>
      </div>
    </section>
  );
}

===== ./components/skills-section.tsx =====
// components/skills-section.tsx
"use client";
import { Badge } from "@/components/ui/badge";
import { BrainCircuit, Users, Sparkles, Goal, Network } from "lucide-react";
import Image from "next/image";

const skills = [
    { name: "Tư duy phản biện & Giải quyết vấn đề", icon: BrainCircuit },
    { name: "Sáng tạo & Đổi mới", icon: Sparkles },
    { name: "Kỹ năng mềm (Giao tiếp, Đồng cảm)", icon: Users },
    { name: "Học tập suốt đời & Thích ứng", icon: Goal },
    { name: "Hiểu biết về AI & Đạo đức công nghệ", icon: Network },
]

export function SkillsSection() {
    return (
        <div className="scroll-section w-full bg-slate-50 dark:bg-gray-900">
            <div className="container mx-auto px-6 grid md:grid-cols-2 gap-12 items-center">
                <div className="relative w-full h-80 md:h-2/3 rounded-2xl overflow-hidden shadow-2xl">
                    <Image 
                        src="/images/analysis-3.jpg"
                        alt="Human skills in the age of AI"
                        fill
                        className="object-cover"
                        sizes="(max-width: 768px) 100vw, 50vw"
                    />
                     <div className="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent"></div>
                </div>
                <div className="text-left">
                    <Badge className="mb-4 animate-fade-in-up-stagger">Định hướng tương lai</Badge>
                    <h2 className="text-4xl md:text-5xl font-bold mb-6 text-balance animate-fade-in-up-stagger [animation-delay:150ms]">
                        Kỹ năng cần thiết cho Kỷ nguyên AI
                    </h2>
                    <p className="text-xl text-muted-foreground mb-8 text-pretty animate-fade-in-up-stagger [animation-delay:300ms]">
                        Để không bị bỏ lại phía sau, con người cần tập trung vào những kỹ năng mà AI không thể dễ dàng thay thế.
                    </p>
                    <div className="space-y-4">
                        {skills.map((skill, index) => {
                            const Icon = skill.icon;
                            return (
                                <div 
                                  key={index} 
                                  className="flex items-center gap-4 p-4 rounded-lg bg-card border hover:shadow-md transition-shadow animate-fade-in-up-stagger"
                                  style={{ animationDelay: `${450 + index * 100}ms` }}
                                >
                                    <Icon className="w-6 h-6 text-secondary flex-shrink-0" />
                                    <span className="font-semibold text-lg">{skill.name}</span>
                                </div>
                            )
                        })}
                    </div>
                </div>
            </div>
        </div>
    )
}

===== ./components/hero-section.tsx =====
// components/hero-section.tsx
"use client";
import { ChevronDown, Cpu } from "lucide-react";

export function HeroSection() {
  return (
    <section className="scroll-section w-full relative">
      <div className="absolute inset-0 z-0">
        <img
          src="/hero-background.jpg" 
          alt="AI and Human Connection"
          className="w-full h-full object-cover"
        />
      </div>
      <div className="absolute inset-0 z-10 bg-gradient-to-t from-background/80 via-background/50 to-transparent"></div>
      
      <div className="container mx-auto px-6 text-center relative z-20">
        <div className="max-w-4xl mx-auto">
          <div className="inline-flex items-center gap-3 bg-card/60 backdrop-blur-sm px-5 py-2.5 rounded-full text-sm font-semibold mb-8 animate-fade-in-up border">
            <Cpu className="w-5 h-5 text-accent" />
            Góc nhìn từ phép biện chứng duy vật
          </div>
          <h1 className="text-5xl md:text-7xl font-black text-foreground mb-6 animate-fade-in-up [animation-delay:200ms] text-balance">
            AI và Con người
            <span className="block bg-gradient-to-r from-accent via-secondary to-accent bg-clip-text text-transparent mt-2">
              Đối tác hay Đối thủ?
            </span>
          </h1>
          {/* NỘI DUNG MỞ BÀI MỚI */}
          <p className="text-xl md:text-2xl text-muted-foreground mb-8 animate-fade-in-up [animation-delay:400ms] text-pretty max-w-3xl mx-auto leading-relaxed italic">
            “Trong lúc ChatGPT có thể viết một bài thơ, Midjourney vẽ nên một bức tranh, AI trong y tế chẩn đoán bệnh... vậy người nghệ sĩ hay bác sĩ có nguy cơ bị thay thế? Mối quan hệ này thực sự là gì?”
          </p>
        </div>
      </div>
      
      <div className="absolute bottom-8 left-1/2 -translate-x-1/2 animate-bounce z-20 flex flex-col items-center gap-1 text-muted-foreground">
        <p className="text-sm font-semibold">Phân tích chi tiết</p>
        <ChevronDown className="w-6 h-6" />
      </div>
    </section>
  );
}

===== ./components/analysis-section.tsx =====
// components/analysis-section.tsx
"use client";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";

const analyses = [
    {
        law: "Theo Quy luật Mâu thuẫn",
        title: "Động Lực Thúc Đẩy",
        description: "AI (tốc độ, tự động hóa) và con người (sáng tạo, đạo đức) là hai mặt đối lập. Chúng vừa thống nhất (AI phục vụ con người), vừa đấu tranh (AI cạnh tranh việc làm). Mâu thuẫn này chính là động lực buộc con người phải thích ứng và đổi mới.",
    },
    {
        law: "Theo Quy luật Lượng – Chất",
        title: "Bước Nhảy Về Chất",
        description: "Ban đầu, AI chỉ hỗ trợ (thay đổi về lượng). Khi AI có thể tự sáng tạo, đó là một 'bước nhảy' về chất. Lao động thay đổi bản chất, con người chuyển từ vai trò thực thi sang quản trị và sáng tạo ở tầng cao hơn.",
    },
    {
        law: "Theo Quy luật Phủ định",
        title: "Phát Triển Xoáy Ốc",
        description: "AI không xóa bỏ con người mà kế thừa tri thức để phủ định các hình thức lao động cũ. Quá trình diễn ra theo đường xoáy ốc: Con người tạo ra AI → AI thay đổi con người → Con người lại cải tiến AI, tạo ra một xã hội ở tầm cao mới.",
    },
];

export function AnalysisSection() {
  return (
    <section className="scroll-section dark text-white w-full bg-slate-900">
        <div className="absolute inset-0 bg-grid-white/[0.05]"></div>
        <div className="absolute inset-0 bg-gradient-to-b from-slate-900 via-slate-900/90 to-slate-900"></div>
        <div className="absolute top-0 left-0 w-72 h-72 bg-accent/20 rounded-full filter blur-3xl animate-float"></div>
        <div className="absolute bottom-0 right-0 w-72 h-72 bg-secondary/20 rounded-full filter blur-3xl animate-float [animation-delay:-3s]"></div>
      <div className="container mx-auto relative z-10">
        <div className="text-center mb-16 animate-fade-in-up">
          <Badge className="mb-4" variant={"default"}>Vận Dụng Phân Tích</Badge>
          <h2 className="text-4xl md:text-5xl font-bold text-white mb-6 luxury-text">
            Mối Quan Hệ Giữa AI và Con Người
          </h2>
          <p className="text-xl text-white/70 max-w-3xl mx-auto text-pretty">
            Áp dụng các quy luật biện chứng để làm sáng tỏ bản chất và xu hướng của mối quan hệ phức tạp này.
          </p>
        </div>
        <div className="grid md:grid-cols-3 gap-8">
          {analyses.map((analysis, index) => (
            <Card
              key={index}
              className="group sophisticated-hover animate-fade-in-up border-white/10 bg-white/5 h-full text-left"
              style={{ animationDelay: `${(index + 1) * 200}ms` }}
            >
              <CardHeader>
                <Badge variant="secondary" className="mb-3 w-fit">{analysis.law}</Badge>
                <CardTitle className="text-2xl text-white group-hover:text-accent transition-colors duration-300">
                  {analysis.title}
                </CardTitle>
              </CardHeader>
              <CardContent>
                <p className="text-white/70 leading-relaxed">{analysis.description}</p>
              </CardContent>
            </Card>
          ))}
        </div>
      </div>
    </section>
  );
}

===== ./components/dot-navigation.tsx =====
// components/dot-navigation.tsx
"use client";

import { useState, useEffect } from 'react';

const sections = [
    { id: 'hero', label: 'Mở đầu' },
    { id: 'laws', label: 'Lý thuyết' },
    { id: 'examples', label: 'Ví dụ' },
    { id: 'ethics', label: 'Đạo đức' },
    { id: 'skills', label: 'Kỹ năng' },
    { id: 'chatbot', label: 'Chatbot' },
    { id: 'conclusion', label: 'Kết luận' },
];

export function DotNavigation() {
    const [activeSection, setActiveSection] = useState('hero');

    useEffect(() => {
        const observer = new IntersectionObserver(
            (entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        setActiveSection(entry.target.id);
                    }
                });
            },
            { root: document.querySelector('.scroll-container'), threshold: 0.5 }
        );

        sections.forEach(section => {
            const el = document.getElementById(section.id);
            if (el) observer.observe(el);
        });

        return () => {
            sections.forEach(section => {
                const el = document.getElementById(section.id);
                if (el) observer.unobserve(el);
            });
        };
    }, []);

    return (
        <nav className="fixed right-6 top-1/2 -translate-y-1/2 z-50">
            <ul className="flex flex-col items-center gap-4">
                {sections.map(section => (
                    <li key={section.id} className="group">
                        <a 
                            href={`#${section.id}`}
                            className={`block w-3 h-3 rounded-full bg-white/50 transition-all duration-300
                                ${activeSection === section.id ? 'scale-150 bg-white' : 'hover:scale-125 hover:bg-white'}`}
                        >
                            <span className="sr-only">{section.label}</span>
                        </a>
                        <div className="absolute right-full top-1/2 -translate-y-1/2 mr-4 px-3 py-1 bg-slate-800 text-white text-sm rounded-md
                                       opacity-0 group-hover:opacity-100 transition-opacity duration-300 pointer-events-none whitespace-nowrap">
                            {section.label}
                        </div>
                    </li>
                ))}
            </ul>
        </nav>
    );
}

===== ./components/ethics-section.tsx =====
// components/ethics-section.tsx
"use client";
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";
import { ShieldCheck, Lock, Users, GitBranch, Scale } from "lucide-react";

const ethicsIssues = [
  {
    title: "Quyền riêng tư & Dữ liệu",
    description: "Dữ liệu cá nhân có nguy cơ bị lạm dụng hoặc lộ ra ngoài nếu không được bảo vệ đúng cách.",
    icon: Lock,
  },
  {
    title: "Thiên lệch & Phân biệt đối xử",
    description: "AI có thể đưa ra quyết định bất công nếu được huấn luyện trên dữ liệu có sẵn sự thiên vị.",
    icon: Users,
  },
  {
    title: "Minh bạch & Giải thích được",
    description: "Cần phải hiểu tại sao AI đưa ra một quyết định cụ thể, đặc biệt trong các lĩnh vực quan trọng.",
    icon: GitBranch,
  },
  {
    title: "Trách nhiệm & Pháp lý",
    description: "Khi AI gây ra lỗi, việc xác định ai (nhà phát triển, người dùng) chịu trách nhiệm là rất phức tạp.",
    icon: Scale,
  },
];

export function EthicsSection() {
  return (
    <section className="scroll-section dark text-white w-full bg-slate-900">
      <div className="absolute inset-0 bg-grid-white/[0.05]"></div>
      <div className="absolute inset-0 bg-gradient-to-b from-slate-900 via-slate-900/90 to-slate-900"></div>
      
      <div className="container mx-auto relative z-10 px-6">
        <div className="text-center mb-16">
          <h2 className="text-4xl md:text-5xl font-bold text-white mb-6">
            Vấn đề Đạo đức & Xã hội
          </h2>
          <p className="text-xl text-white/70 max-w-3xl mx-auto text-pretty">
            Sự phát triển của AI đặt ra những câu hỏi quan trọng về giá trị và trách nhiệm của con người.
          </p>
        </div>
        <div className="grid md:grid-cols-2 lg:grid-cols-4 gap-8">
          {ethicsIssues.map((issue, index) => {
            const Icon = issue.icon;
            return (
              <Card
                key={index}
                className="group sophisticated-hover border-white/10 bg-white/5 h-full text-left p-2"
              >
                <CardHeader>
                  <div className="mb-4">
                    <Icon className="w-10 h-10 text-accent group-hover:scale-110 transition-transform duration-300" />
                  </div>
                  <CardTitle className="text-2xl text-white group-hover:text-accent transition-colors duration-300">
                    {issue.title}
                  </CardTitle>
                </CardHeader>
                <CardContent>
                  <p className="text-white/70 leading-relaxed">{issue.description}</p>
                </CardContent>
              </Card>
            )
          })}
        </div>
        <p className="text-center mt-12 text-sm text-white/50 italic">
          Các nguyên tắc chính cần tuân thủ: Công bằng (Fairness), Minh bạch (Transparency), Trách nhiệm (Accountability), và Bảo vệ dữ liệu (Data Privacy).
        </p>
      </div>
    </section>
  );
}

===== ./components/analysis-horizontal-scroll-section.tsx =====
// components/analysis-horizontal-scroll-section.tsx
"use client"
import { useEffect, useRef, useState } from "react"
import { Badge } from "./ui/badge";
import Image from "next/image";

const analyses = [
  {
    law: "Theo Quy luật Mâu thuẫn",
    title: "Động Lực Thúc Đẩy",
    description: "AI (tốc độ, tự động hóa) và con người (sáng tạo, đạo đức) là hai mặt đối lập. Chúng vừa thống nhất (AI là sản phẩm phục vụ con người), vừa đấu tranh (AI cạnh tranh việc làm, thách thức vai trò sáng tạo). Chính mâu thuẫn này là động lực buộc con người phải thích ứng, đổi mới và phát triển.",
    imageUrl: "/images/analysis-1.jpg",
    points: [ "AI là sản phẩm của con người", "Vừa hợp tác, vừa cạnh tranh", "Tạo động lực phát triển mới"]
  },
  {
    law: "Theo Quy luật Lượng - Chất",
    title: "Bước Nhảy Về Chất",
    description: "Ban đầu, AI chỉ hỗ trợ xử lý dữ liệu (thay đổi về lượng). Khi AI có thể tự sáng tạo (viết văn, vẽ tranh), đó là một 'bước nhảy' về chất. Lao động thay đổi bản chất, con người chuyển từ vai trò thực thi sang quản trị và sáng tạo ở tầng cao hơn.",
    imageUrl: "/images/analysis-2.jpg",
    points: ["Tích lũy lượng -> Bước nhảy chất", "Thay đổi bản chất lao động", "Nhiều ngành nghề mới xuất hiện"]
  },
  {
    law: "Theo Quy luật Phủ định",
    title: "Phát Triển Xoáy Ốc",
    description: "AI không xóa bỏ con người mà kế thừa tri thức để phủ định các hình thức lao động cũ. Quá trình này diễn ra theo đường xoáy ốc: Con người tạo ra AI → AI thay đổi con người → Con người lại cải tiến AI, tạo ra một xã hội ở tầm cao mới, văn minh hơn.",
    imageUrl: "/images/analysis-3.jpg",
    points: ["Phủ định có kế thừa", "Phát triển theo đường xoáy ốc", "Tạo ra xã hội ở tầm cao mới"]
  },
]

export function AnalysisHorizontalScrollSection() {
  const containerRef = useRef<HTMLDivElement>(null);
  const [activeIndex, setActiveIndex] = useState(0);

  useEffect(() => {
    const observer = new IntersectionObserver(
      (entries) => {
        entries.forEach((entry) => {
          const target = entry.target as HTMLElement;
          if (entry.isIntersecting) {
            target.classList.add("is-visible");
            const index = parseInt(target.getAttribute('data-index') || '0', 10);
            setActiveIndex(index);
          } else {
            target.classList.remove("is-visible");
          }
        });
      },
      { root: containerRef.current, threshold: 0.6 }
    );
    const cards = Array.from(containerRef.current?.children || []);
    cards.forEach((card) => observer.observe(card));
    return () => { cards.forEach((card) => observer.unobserve(card)); };
  }, []);

  return (
    <section className="scroll-section relative">
      
      {/* Layer 1: Ảnh nền cố định */}
      <div className="absolute inset-0 z-0">
          <img
              src="/analysis-background.jpg"
              alt="Abstract office background"
              className="w-full h-full object-cover"
          />
      </div>

      {/* ===== PHẦN CẬP NHẬT ===== */}
      {/* Layer 2: Lớp phủ trắng đã giảm độ mờ và bỏ blur */}
      <div className="absolute inset-0 z-10 bg-white/50"></div>
      {/* ========================== */}

      {/* Layer 3: Nội dung chính */}
      <div ref={containerRef} className="horizontal-scroll-container h-full w-full relative z-20">
        {analyses.map((analysis, index) => (
          <div key={index} className="horizontal-card" data-index={index}>
            <div className="card-content-wrapper w-full h-full">
              <div className="container mx-auto grid md:grid-cols-2 items-center gap-12 h-full">
                {/* Cột hình ảnh */}
                <div className="w-full h-1/2 md:h-2/3 relative rounded-2xl overflow-hidden shadow-2xl">
                    <Image
                        src={analysis.imageUrl}
                        alt={analysis.title}
                        fill
                        className="object-cover"
                        sizes="(max-width: 768px) 100vw, 50vw"
                    />
                    <div className="absolute inset-0 bg-gradient-to-t from-black/30 to-transparent"></div>
                </div>
                {/* Cột nội dung */}
                <div className="text-left">
                  <Badge className="mb-4" variant="secondary">{analysis.law}</Badge>
                  <h2 className="text-4xl md:text-5xl font-bold text-foreground mb-6 text-balance">
                    {analysis.title}
                  </h2>
                  <p className="text-lg text-muted-foreground leading-relaxed text-pretty mb-8">
                    {analysis.description}
                  </p>
                  <div className="flex flex-wrap gap-3">
                      {analyses[activeIndex].points.map((point, i) => (
                          <Badge key={i} variant="outline" className="text-base py-1 px-4">{point}</Badge>
                      ))}
                  </div>
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
      
      {/* Dấu chấm chỉ báo tiến trình */}
      <div className="absolute bottom-10 left-1/2 -translate-x-1/2 flex gap-3 z-20">
        {analyses.map((_, index) => (
          <div key={index} className={`w-3 h-3 rounded-full transition-all duration-500 ${ activeIndex === index ? 'scale-125 bg-primary' : 'bg-border' }`} />
        ))}
      </div>
    </section>
  )
}

===== ./components/conclusion-section.tsx =====
// components/conclusion-section.tsx
"use client";
import { Users, Flag } from "lucide-react";

export function ConclusionSection() {
  return (
    <div className="scroll-section dark relative text-white">
      <div className="absolute inset-0 z-0">
        <img
          src="/conclusion-background.jpg"
          alt="Futuristic digital landscape"
          className="w-full h-full object-cover"
        />
      </div>
      <div className="absolute inset-0 z-10 bg-slate-900/70"></div>
      
      <div className="container mx-auto text-center relative z-30 px-6">
        <div className="max-w-4xl mx-auto">
          <h2 className="text-4xl md:text-5xl font-black text-white mb-8 animate-fade-in-up text-balance">
            Kết Luận & Hướng Đi
          </h2>
          <div className="space-y-8 text-xl text-white/90 text-pretty leading-relaxed">
            <p className="animate-fade-in-up [animation-delay:200ms]">
              AI không phải kẻ thù, mà là một công cụ và động lực mạnh mẽ để con người tiến hóa. Mối quan hệ này là một <strong className="text-white">mâu thuẫn biện chứng</strong>, thúc đẩy chúng ta vươn lên tầm cao mới về trí tuệ và sáng tạo.
            </p>
            
            <div className="animate-fade-in-up [animation-delay:400ms] space-y-4 text-left">
                <div className="p-5 rounded-xl bg-white/10 backdrop-blur-md border border-white/20 flex items-start gap-4">
                    <Flag className="w-8 h-8 mt-1 text-accent flex-shrink-0" />
                    <div>
                        <h3 className="font-bold text-white mb-1">Học tập & Nâng cao kỹ năng</h3>
                        <p className="text-white/80">Liên tục trau dồi kỹ năng mềm, tư duy phản biện và hiểu biết về công nghệ.</p>
                    </div>
                </div>
                 <div className="p-5 rounded-xl bg-white/10 backdrop-blur-md border border-white/20 flex items-start gap-4">
                    <Users className="w-8 h-8 mt-1 text-accent flex-shrink-0" />
                    <div>
                        <h3 className="font-bold text-white mb-1">Xây dựng môi trường hợp tác</h3>
                        <p className="text-white/80">Nâng cao nhận thức đạo đức, tham gia xây dựng quy định để phát triển AI vì lợi ích chung.</p>
                    </div>
                </div>
            </div>

            <div className="animate-fade-in-up [animation-delay:600ms] pt-4">
               <p className="text-2xl font-semibold italic bg-gradient-to-r from-white to-slate-300 bg-clip-text text-transparent animated-gradient">
                  "Nếu AI ngày mai có thể làm hầu hết công việc của bạn, bạn muốn bản thân làm gì để vẫn có giá trị?"
                </p>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
}

===== ./components/ui/card.tsx =====
import * as React from "react"

import { cn } from "@/lib/utils"

const Card = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn(
      "rounded-xl border bg-card text-card-foreground shadow",
      className
    )}
    {...props}
  />
))
Card.displayName = "Card"

const CardHeader = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("flex flex-col space-y-1.5 p-6", className)}
    {...props}
  />
))
CardHeader.displayName = "CardHeader"

const CardTitle = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("font-semibold leading-none tracking-tight", className)}
    {...props}
  />
))
CardTitle.displayName = "CardTitle"

const CardDescription = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("text-sm text-muted-foreground", className)}
    {...props}
  />
))
CardDescription.displayName = "CardDescription"

const CardContent = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div ref={ref} className={cn("p-6 pt-0", className)} {...props} />
))
CardContent.displayName = "CardContent"

const CardFooter = React.forwardRef<
  HTMLDivElement,
  React.HTMLAttributes<HTMLDivElement>
>(({ className, ...props }, ref) => (
  <div
    ref={ref}
    className={cn("flex items-center p-6 pt-0", className)}
    {...props}
  />
))
CardFooter.displayName = "CardFooter"

export { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }


===== ./components/ui/badge.tsx =====
import * as React from "react"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const badgeVariants = cva(
  "inline-flex items-center rounded-md border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2",
  {
    variants: {
      variant: {
        default:
          "border-transparent bg-primary text-primary-foreground shadow hover:bg-primary/80",
        secondary:
          "border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80",
        destructive:
          "border-transparent bg-destructive text-destructive-foreground shadow hover:bg-destructive/80",
        outline: "text-foreground",
      },
    },
    defaultVariants: {
      variant: "default",
    },
  }
)

export interface BadgeProps
  extends React.HTMLAttributes<HTMLDivElement>,
    VariantProps<typeof badgeVariants> {}

function Badge({ className, variant, ...props }: BadgeProps) {
  return (
    <div className={cn(badgeVariants({ variant }), className)} {...props} />
  )
}

export { Badge, badgeVariants }


===== ./components/ui/button.tsx =====
import * as React from "react"
import { Slot } from "@radix-ui/react-slot"
import { cva, type VariantProps } from "class-variance-authority"

import { cn } from "@/lib/utils"

const buttonVariants = cva(
  "inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-colors focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0",
  {
    variants: {
      variant: {
        default:
          "bg-primary text-primary-foreground shadow hover:bg-primary/90",
        destructive:
          "bg-destructive text-destructive-foreground shadow-sm hover:bg-destructive/90",
        outline:
          "border border-input bg-background shadow-sm hover:bg-accent hover:text-accent-foreground",
        secondary:
          "bg-secondary text-secondary-foreground shadow-sm hover:bg-secondary/80",
        ghost: "hover:bg-accent hover:text-accent-foreground",
        link: "text-primary underline-offset-4 hover:underline",
      },
      size: {
        default: "h-9 px-4 py-2",
        sm: "h-8 rounded-md px-3 text-xs",
        lg: "h-10 rounded-md px-8",
        icon: "h-9 w-9",
      },
    },
    defaultVariants: {
      variant: "default",
      size: "default",
    },
  }
)

export interface ButtonProps
  extends React.ButtonHTMLAttributes<HTMLButtonElement>,
    VariantProps<typeof buttonVariants> {
  asChild?: boolean
}

const Button = React.forwardRef<HTMLButtonElement, ButtonProps>(
  ({ className, variant, size, asChild = false, ...props }, ref) => {
    const Comp = asChild ? Slot : "button"
    return (
      <Comp
        className={cn(buttonVariants({ variant, size, className }))}
        ref={ref}
        {...props}
      />
    )
  }
)
Button.displayName = "Button"

export { Button, buttonVariants }


===== ./lib/utils.ts =====
import { clsx, type ClassValue } from "clsx"
import { twMerge } from "tailwind-merge"

export function cn(...inputs: ClassValue[]) {
  return twMerge(clsx(inputs))
}


===== ./app/globals.css =====
/* app/globals.css */

@import "tailwindcss";
@import "tw-animate-css";

@custom-variant dark (&:is(.dark *));

:root {
  /* ... (toàn bộ các biến CSS :root và .dark của bạn giữ nguyên) ... */
  --background: #ffffff;
  --foreground: #1f2937;
  --card: #f8fafc;
  --card-foreground: #374151;
  --popover: #ffffff;
  --popover-foreground: #1f2937;
  --primary: #374151;
  --primary-foreground: #ffffff;
  --secondary: #6366f1;
  --secondary-foreground: #ffffff;
  --muted: #f8fafc;
  --muted-foreground: #6b7280;
  --accent: #6366f1;
  --accent-foreground: #ffffff;
  --destructive: #ef4444;
  --destructive-foreground: #ffffff;
  --border: #e5e7eb;
  --input: #f8fafc;
  --ring: rgba(99, 102, 241, 0.5);
  --radius: 0.75rem;
}

.dark {
  --background: #111827;
  --foreground: #f9fafb;
  --card: #1f2937;
  --card-foreground: #f9fafb;
  --popover: #1f2937;
  --popover-foreground: #f9fafb;
  --primary: #818cf8;
  --primary-foreground: #111827;
  --secondary: #4f46e5;
  --secondary-foreground: #f9fafb;
  --muted: #1f2937;
  --muted-foreground: #9ca3af;
  --accent: #818cf8;
  --accent-foreground: #111827;
  --destructive: #f87171;
  --destructive-foreground: #111827;
  --border: #374151;
  --input: #1f2937;
  --ring: #818cf8;
  --radius: 0.75rem;
}

@theme inline {
  /* ... (toàn bộ phần @theme inline của bạn giữ nguyên) ... */
  --font-sans: var(--font-geist-sans);
  --font-mono: var(--font-geist-mono);
  --color-background: var(--background);
  --color-foreground: var(--foreground);
  --color-card: var(--card);
  --color-card-foreground: var(--card-foreground);
  --color-popover: var(--popover);
  --color-popover-foreground: var(--popover-foreground);
  --color-primary: var(--primary);
  --color-primary-foreground: var(--primary-foreground);
  --color-secondary: var(--secondary);
  --color-secondary-foreground: var(--secondary-foreground);
  --color-muted: var(--muted);
  --color-muted-foreground: var(--muted-foreground);
  --color-accent: var(--accent);
  --color-accent-foreground: var(--accent-foreground);
  --color-destructive: var(--destructive);
  --color-destructive-foreground: var(--destructive-foreground);
  --color-border: var(--border);
  --color-input: var(--input);
  --color-ring: var(--ring);
  --radius-sm: calc(var(--radius) - 4px);
  --radius-md: calc(var(--radius) - 2px);
  --radius-lg: var(--radius);
  --radius-xl: calc(var(--radius) + 4px);
}

@layer base {
  * {
    @apply border-border;
  }
  body {
    @apply bg-background text-foreground;
  }
}

/* ... (toàn bộ các keyframes và class animation cũ của bạn giữ nguyên, từ @keyframes float đến .sophisticated-hover:hover) ... */
@keyframes float {
  0%,
  100% {
    transform: translateY(0px);
  }
  50% {
    transform: translateY(-20px);
  }
}
/* ... */
.sophisticated-hover:hover {
  transform: translateY(-12px) rotateX(15deg);
  box-shadow: 0 25px 80px rgba(0, 0, 0, 0.2), 0 0 60px rgba(99, 102, 241, 0.3);
}


/* === PHẦN CSS NÂNG CẤP CUỐI CÙNG (ĐÃ SỬA LỖI) === */

/* Tắt thanh cuộn mặc định của body */
body, html {
  overflow: hidden;
  height: 100%;
}

html {
  scroll-behavior: smooth;
}

/* 1. Container cuộn DỌC toàn trang */
.scroll-container {
  overflow-y: scroll;
  scroll-snap-type: y mandatory;
  height: 100vh;
}

.scroll-section {
  scroll-snap-align: start;
  height: 100vh;
  position: relative;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  padding: 1.5rem;
}

/* 2. Container cuộn NGANG cho phần Laws */
.horizontal-scroll-container {
  display: flex;
  overflow-x: scroll;
  scroll-snap-type: x mandatory;
  /* Ẩn thanh cuộn ngang */
  -ms-overflow-style: none; /* IE and Edge */
  scrollbar-width: none; /* Firefox */
}
.horizontal-scroll-container::-webkit-scrollbar {
  display: none; /* Chrome, Safari, and Opera */
}

.horizontal-card {
  width: 100vw;
  height: 100vh;
  flex-shrink: 0;
  scroll-snap-align: start;
  display: flex;
  justify-content: center;
  align-items: center;
  padding: 2rem;
  position: relative;
}

/* 3. Animation cho nội dung (SỬA LỖI MẤT CHỮ) */
@keyframes contentFadeInUp {
  from {
    opacity: 0;
    transform: translateY(25px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

.card-content-wrapper {
  opacity: 0; /* Mặc định ẩn */
}

/* Khi slide được kích hoạt (có class is-visible), áp dụng animation */
.horizontal-card.is-visible .card-content-wrapper {
  animation: contentFadeInUp 0.8s cubic-bezier(0.25, 1, 0.5, 1) 0.3s forwards;
}
@keyframes subtle-zoom-in-out {
  0%, 100% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.05); /* Phóng to 5% */
  }
}

.animate-subtle-zoom {
  animation: subtle-zoom-in-out 15s ease-in-out infinite; /* Thời gian animation là 15 giây */
}

===== ./app/page.tsx =====
// app/page.tsx
import { HeroSection } from "@/components/hero-section";
import { LawsHorizontalScrollSection } from "@/components/laws-horizontal-scroll-section";
import { ExamplesSection } from "@/components/examples-section";
import { EthicsSection } from "@/components/ethics-section";
import { SkillsSection } from "@/components/skills-section";
import { ChatbotSection } from "@/components/chatbot-section";
import { ConclusionSection } from "@/components/conclusion-section";
import { DotNavigation } from "@/components/dot-navigation";

export default function Home() {
  return (
    <>
      <DotNavigation />
      <div className="scroll-container">
        <section id="hero"><HeroSection /></section>
        <section id="laws"><LawsHorizontalScrollSection /></section>
        <section id="examples"><ExamplesSection /></section>
        <section id="ethics"><EthicsSection /></section>
        <section id="skills"><SkillsSection /></section>
        <section id="chatbot"><ChatbotSection /></section>
        <section id="conclusion"><ConclusionSection /></section>
      </div>
    </>
  );
}

===== ./app/layout.tsx =====
// app/layout.tsx
import type { Metadata } from "next";
import { Inter } from "next/font/google";
import "./globals.css";

const inter = Inter({ subsets: ["latin", "vietnamese"], display: "swap" });

export const metadata: Metadata = {
  title: "AI và Con người – Đối tác hay Đối thủ?",
  description: "Phân tích mối quan hệ giữa AI và con người dưới góc nhìn phép biện chứng duy vật.",
};

export default function RootLayout({ children }: { children: React.ReactNode }) {
  return (
    <html lang="vi">
      <body className={inter.className}>{children}</body>
    </html>
  );
}

===== DIRECTORY TREE =====
./
    README.md
    next.config.js
    tailwind.config.ts
    components.json
    postcss.config.mjs
    eslint.config.mjs
    tsconfig.json
    next-env.d.ts
    components/
        chatbot-section.tsx
        laws-horizontal-scroll-section.tsx
        examples-section.tsx
        skills-section.tsx
        hero-section.tsx
        analysis-section.tsx
        dot-navigation.tsx
        ethics-section.tsx
        analysis-horizontal-scroll-section.tsx
        conclusion-section.tsx
        ui/
            card.tsx
            badge.tsx
            button.tsx
    lib/
        utils.ts
    app/
        globals.css
        page.tsx
        layout.tsx
    public/
        chatbot-background.jpg
        analysis-background.jpg
        hero-background.jpg
        laws-background.jpg
        conclusion-background.jpg
        images/
            analysis-2.jpg
            analysis-1.jpg
            analysis-3.jpg
